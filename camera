#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/freeglut.h>
#include <math.h>
#include <stdio.h>
#include <cmath>

float posCameraX = 0.0, posCameraY = 0.0, posCameraZ = 5.0; 
Uint8 SDL_EventState(Uint32 type, int state);
float camYaw = 0.0;
float camPitch = 0.0;


#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif

void lockCamera();
void moveCamera(float, float);
void moveCameraUp(float, float);
void control();
void updateCamera();


void moveCamera(float distance, float direction){

	float rad = (camYaw + direction)*M_PI/180.0;
	posCameraX -= sin(rad)*distance;
	posCameraY -= cos(rad)*distance;
}

void moveCameraUp(float distance, float direction){
	
	float rad = (camPitch + direction) * M_PI/180.0;
	posCameraY += sin(rad)*distance;
	}

void control(float moveVelocity, float mouseVelocity, bool mi){
		if(mi){
		int MidX = 320;
		int MidY = 240;
		SDL_ShowCursor(SDL_DISABLE);
		int tmpX, tmpY;
		SDL_GetMouseState(&tmpX, &tmpY);
		camYaw += mouseVelocity*(MidX-tmpX);
		camPitch += mouseVelocity*(MidY-tmpY);
		lockCamera();
		SDL_WarpMouse(MidX,MidY);
		Uint8* state = SDL_GetKeyState(NULL);
		if(state[SDLK_w]{
			if(camPitch!=90 && camPitch!=-90)
			moveCamera(moveVelocity,0.0);
			moveCameraUp(moveVelocity, 0.0);
			}else if(state[SDLK_s]){
				if(camPitch!=90 && camPitch!=-90)
				moveCamera(moveVelocity,180.0);
				moveCameraUp(moveVelocity, 180.0);
				}
				else if(state[SDLK_a]){
					moveCamera(moveVelocity,90.0);
					}
					else if(state[SDLK_d]){
						moveCamera(moveVelocity,270);
						}
					}
		glRotatef(-camPitch,1.0,0.0,0.0);
		glRotated(-camYaw,0.0,1.0,0.0);
	}

void UpdateCamera(){
		
		glTranslatef(-posCameraX, -posCameraY, -posCameraZ);
		
	}
